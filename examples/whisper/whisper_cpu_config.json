{
    "verbose": true,
    "input_model":{
        "type": "PyTorchModel",
        "config": {
            "model_path": null,
            "model_storage_kind": "folder",
        },
        "hf_config": {
            "model" : "WhisperForConditionalGeneration",
            "path" : "openai/whisper-tiny.en",
            "dataset" : "hf-internal-testing/librispeech_asr_dummy",
            "components" : [
                { 
                    "name": "encoder_decoder_init",
                    "io_config": {
                        "input_names": ["input_ids", "attention_mask", "token_type_ids"],
                        "input_shapes": [[1, 128], [1, 128], [1, 128]],
                        "input_types": ["int64", "int64", "int64"],
                        "dynamic_axes": {
                            "input": {"0": "batch_size"},
                            "output": {"0": "batch_size"}
                        },
                        "output_names": ["output"]
                    }
                },
                {
                    "name": "decoder",
                    "io_config": {
                        "input_names": ["input_ids", "attention_mask", "token_type_ids"],
                        "input_shapes": [[1, 128], [1, 128], [1, 128]],
                        "input_types": ["int64", "int64", "int64"],
                        "dynamic_axes": {
                            "input": {"0": "batch_size"},
                            "output": {"0": "batch_size"}
                        },
                        "output_names": ["output"]
                    }
                }
            ]
        }
    },
    "systems": {
        "local_system": {"type": "LocalSystem"}
        }
    },
    "evaluators": {
        "common_evaluator": {
            "metrics":[
                {
                    "name": "accuracy",
                    "type": "accuracy",
                    "sub_type": "accuracy_score",
                    "priority_rank": 1,
                    "user_config":{
                        "batch_size": 1
                    }
                },
                {
                    "name": "latency",
                    "type": "latency",
                    "sub_type": "avg",
                    "priority_rank": 2,
                    "user_config":{
                        "batch_size": 1
                    }
                }
            ],
            "target": "local_system"
        }
    },
    "passes": {
        "conversion": {
            "type": "OnnxConversion",
            "config": {
                "target_opset": 13
            }
        },
        "transformers_optimization": {
            "type": "OrtTransformersOptimization",
            "config": {"model_type": "bart"}
        },
        "onnx_dynamic_quantization": {
            "type": "OnnxDynamicQuantization",
            "disable_search": true,
            "config": {
                "weight_type": "QUInt8",
                "per_channel": "SEARCHABLE_VALUES",
                "reduce_range": "SEARCHABLE_VALUES"
            },
            "clean_run_cache": false
        },
        "insert_beam_search" : {
            "type" : "InsertBeamSearch"
        },
        "prepost": {
            "type": "PrePostProcessing",
            "config": {
                "pre": [],
                "post": []
            }
        },
        "perf_tuning": {
            "type": "OrtPerfTuning",
            "config": {
                "user_script": "user_script.py",
            }
        }
    },
    "engine": {
        "search_strategy": {
            "execution_order": "joint",
            "search_algorithm": "tpe",
            "search_algorithm_config": {
                "num_samples": 5,
                "seed": 0
            }
        },
        "evaluator": "common_evaluator",
        "host": "local_system",
        "clean_cache": true,
        "cache_dir": "cache"
    }
}
